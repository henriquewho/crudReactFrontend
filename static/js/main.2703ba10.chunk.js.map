{"version":3,"sources":["services/login.js","components/helperComponents/Notification.js","components/Login.js","components/helperComponents/Title.js","services/users.js","components/Config.js","services/items.js","components/Items.js","components/Item.js","components/NewItem.js","components/Main.js","App.js","index.js"],"names":["login","credentials","a","axios","post","resp","data","loginService","Notification","message","type","notifClass","className","msg","Login","setUser","useState","username","setUsername","password","setPassword","setMessage","handleLogin","e","preventDefault","user","window","localStorage","setItem","JSON","stringify","setTimeout","onSubmit","placeholder","value","onChange","target","style","display","role","onClick","Title","title","baseUrl","token","configToken","headers","Authorization","update","config","put","id","create","userService","setToken","newToken","Config","currUser","newPass","setNewPass","admin","setAdmin","newPass1","setNewPass1","newPass2","setNewPass2","length","indexOf","newUser","name","then","document","getElementsByClassName","checked","catch","err","response","error","getItem","get","getAll","createItem","item","updateItem","deleteItem","delete","itemService","ItemList","items","setAllItems","currentUser","map","each","content","eachUser","confirm","filter","handleDelete","to","Items","allItems","useEffect","Item","useParams","private","loadedItem","setLoadedItem","text","setText","backButton","setBackButton","history","useHistory","defaultValue","readOnly","rows","editedItem","push","NewItem","rights","setRights","Main","hist","textDecoration","color","size","fontSize","textDecorationColor","removeItem","location","reload","path","App","loggedUserJSON","parse","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2703ba10.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/login'\r\nconst baseUrl = 'https://immense-scrubland-20832.herokuapp.com/api/login'\r\n\r\nconst login = async credentials => {\r\n    const resp = await axios.post(baseUrl, credentials)\r\n    return resp.data\r\n}\r\n\r\nconst loginService = {\r\n    login\r\n}\r\nexport default loginService\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (!message) return null;\r\n\r\n    const type = message ? message.type : ''; \r\n    const notifClass = `notification ${type}`\r\n\r\n    return (\r\n        <div className={notifClass}>\r\n            {message.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState} from 'react'\r\nimport '../sass/Login.scss'\r\nimport loginService from '../services/login'\r\nimport Notification from './helperComponents/Notification'\r\n\r\nfunction Login({setUser}) {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault(); \r\n        try {\r\n            const user = await loginService.login({\r\n                username, password\r\n            })\r\n            setUser(user)\r\n            window.localStorage.setItem(\r\n                'loggedUserP1', JSON.stringify(user)\r\n            )\r\n            //console.log('user logged in: ', user, 'token: ', user.token)\r\n\r\n        } catch (err) {\r\n            //console.log('error logging in: ', err); \r\n            setMessage({type: 'error-notification', msg: 'User or password incorrect, please try again or contact the administrator'})\r\n            setTimeout(()=>setMessage(null), 3000)\r\n        }\r\n    }\r\n\r\n    const clearLogin = (e) =>{\r\n        e.preventDefault(); \r\n        setUsername('')\r\n        setPassword('')\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='login-page'>\r\n            <div className='login-header'>\r\n                <h2 className='titles'>Login</h2>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className='login-card'>\r\n\r\n                <form onSubmit={handleLogin} className='login-form'>\r\n\r\n                    <div className='login-fields'>\r\n\r\n                        <div className='field'>\r\n                            <input className='login-input' placeholder='user' value={username} onChange={({target})=>setUsername\r\n                        (target.value)}/>\r\n                        </div>\r\n\r\n                        <div className='field'>\r\n                            <input className='login-input' placeholder='password' type='password' value={password} onChange={({target})=>setPassword\r\n                        (target.value)}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button type='submit' style={{display:'none'}}>submit</button>\r\n\r\n                </form>\r\n\r\n                <div className='login-buttons'>\r\n\r\n                        <div type='submit' role='button' className='login-button' onClick={handleLogin}>login</div>\r\n\r\n                        <div role='button' className='login-clear' onClick={clearLogin}>clear</div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <Notification message={message}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport '../../sass/HelperComponents.scss'\r\n\r\nfunction Title({title}) {\r\n    return (\r\n        <div>\r\n            <h2 className='title'>{title}</h2>\r\n            <hr  className='divider'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/users'\r\nconst baseUrl = 'https://immense-scrubland-20832.herokuapp.com/api/users'; \r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`; \r\n}\r\n\r\nconst configToken = () => {\r\n    return {\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    }\r\n}\r\nconst update = async user => {\r\n    const config = configToken(); \r\n    const resp = await axios.put(baseUrl+`/${user.id}`, user, config)\r\n    return resp.data; \r\n}\r\n\r\nconst create = async user => {\r\n    const config = configToken(); \r\n    const resp = await axios.post(baseUrl, user, config)\r\n    return resp.data; \r\n\r\n}\r\n\r\nconst userService = {\r\n    update, create, setToken\r\n}\r\n\r\nexport default userService\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport Title from './helperComponents/Title'\r\nimport Notification from './helperComponents/Notification'\r\nimport userService from '../services/users';\r\nimport '../sass/Config.scss'\r\n\r\nfunction Config({user}) {\r\n\r\n    let currUser = user; \r\n    userService.setToken(user.token)\r\n    const [username, setUsername] = useState('')\r\n    const [newPass, setNewPass] = useState('')\r\n    const [admin, setAdmin] = useState(false)\r\n    const [newPass1, setNewPass1] = useState('')\r\n    const [newPass2, setNewPass2] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const create = e => {\r\n\r\n        if ((username.length===0) || (newPass===0)){\r\n            setMessage({type: 'error-notification', msg: 'Fill the Username and Password'})\r\n            setTimeout(()=>setMessage(null), 3000)\r\n        } else if (newPass.length<5){\r\n            setMessage({type: 'error-notification', msg: 'The password should have 5 characters or more'})\r\n            setTimeout(()=>setMessage(null), 3000)\r\n        } else if ( username.indexOf(' ')!==-1 || newPass.indexOf(' ')!==-1 ) {\r\n            setMessage({type: 'error-notification', msg: 'The user / password should not have empty spaces'})\r\n            setTimeout(()=>setMessage(null), 3000)\r\n        } else {\r\n\r\n            const newUser = {\r\n                username, name: username, password: newPass, admin\r\n            }\r\n            userService.create(newUser).then(data => {\r\n                document.getElementsByClassName('checkbox')[0].checked = false; \r\n                setUsername(''); setNewPass(''); setAdmin(false); \r\n                setMessage({type: 'success-notification', msg: 'User created successfully'})\r\n                setTimeout(()=>setMessage(null), 3000)\r\n            }).catch(err => {\r\n                const error =  err.response.data.error; \r\n                if (error==='This username is already taken'){\r\n                    setMessage({type: 'error-notification', msg: 'Username already taken, create a new one'})\r\n                    setTimeout(()=>setMessage(null), 3000)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const changePass = e => {\r\n\r\n        if (newPass1!==newPass2){\r\n            setMessage({type: 'error-notification', msg: 'The fields must have the same password'})\r\n            setTimeout(()=>setMessage(null), 3000)\r\n        } else if (newPass1.length < 5) {\r\n            setMessage({type: 'error-notification', msg: 'The password should have 5 characters or more'})\r\n            setTimeout(()=>setMessage(null), 3000)\r\n        } else if (newPass1.indexOf(' ')!==-1){\r\n            setMessage({type: 'error-notification', msg: 'The password should not have empty spaces'})\r\n            setTimeout(()=>setMessage(null), 3000)\r\n        } else {\r\n            currUser.newPass = newPass1; \r\n            userService.update(currUser).then(resp => {\r\n                setMessage({type: 'success-notification', msg: 'Password changed successfully'})\r\n                setTimeout(()=>setMessage(null), 3000)\r\n                setNewPass1(''); setNewPass2('')\r\n            })\r\n        }\r\n    }\r\n\r\n    const createUser = () => {\r\n        return (\r\n            <div className='new-user-box'>\r\n                <p>Create new user</p>\r\n                <div className='new-user'>\r\n\r\n                    <div>\r\n                        Username: <br/>\r\n                        Password: <hr className='half-break'/>\r\n                        Admin: \r\n                    </div>\r\n                    <div>\r\n                        <input value={username} onChange={e=>setUsername(e.target.value)}></input> <br/>\r\n                        <input type='password' value={newPass} onChange={e=>setNewPass(e.target.value)}></input> <hr className='half-break'/>\r\n                        <input className='checkbox' type='checkbox' value={admin} onChange={e=>setAdmin(e.target.checked)}></input> \r\n                        <button onClick={create}>Create</button>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title='Settings' />\r\n            <div className='config-users-box'>\r\n                {(currUser.admin) ? createUser():null}\r\n\r\n                <p>Change your password </p>\r\n                <div className='change-password'>\r\n                    \r\n                    <div>\r\n                        New password: <br/>\r\n                        Confirm:\r\n                    </div>\r\n                    <div>\r\n                    <input type='password' value={newPass1} onChange={e=>setNewPass1(e.target.value)}></input> <br/>\r\n                    <input type='password' value={newPass2} onChange={e=>setNewPass2(e.target.value)}></input> \r\n                    <button onClick={changePass}>Save</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <hr/>\r\n                <Notification message={message}/>\r\n\r\n                <div className='change-language'>\r\n                    {/* Put the language toggle helper \r\n                    */}\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Config\r\n","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/items'\r\nconst baseUrl = 'https://immense-scrubland-20832.herokuapp.com/api/items'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`; \r\n}\r\n\r\nconst configToken = () => {\r\n    return {\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    }\r\n}\r\n\r\nconst getItem = async id => {\r\n    const resp = await axios.get(`${baseUrl}/${id}`);\r\n    return resp.data; \r\n}\r\n\r\nconst getAll = async user => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    }\r\n\r\n    const resp = await axios.get(`${baseUrl}`, config)\r\n\r\n    return resp.data; \r\n}\r\n\r\nconst createItem = async item => {\r\n    const config = configToken()\r\n    const resp = await axios.post(`${baseUrl}`, item, config)\r\n    return resp.data \r\n}\r\n\r\nconst updateItem = async item => {\r\n    const config = configToken()\r\n    const resp = await axios.put(`${baseUrl}/${item.id}`, item, config)\r\n    return resp.data\r\n}\r\n\r\nconst deleteItem = async id => {\r\n    const config = configToken()\r\n    const resp = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return resp.data; \r\n}\r\n\r\nconst itemService = {\r\n    getItem, getAll, createItem, setToken, updateItem, deleteItem\r\n}\r\nexport default itemService\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport Title from './helperComponents/Title'\r\n//import {Link, BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport itemService from '../services/items'\r\nimport '../sass/Items.scss'\r\nimport Notification from './helperComponents/Notification'\r\n\r\nimport { FaTrashAlt, FaEdit } from 'react-icons/fa'\r\n\r\nfunction Items({user}) {\r\n    const [allItems, setAllItems] = useState([])\r\n    const currentUser = user; \r\n    itemService.setToken(currentUser.token)\r\n\r\n    useEffect(()=>{\r\n        itemService.getAll(currentUser.username).then(data=>{\r\n            setAllItems(data)\r\n        })\r\n    }, [currentUser.username])\r\n\r\n    return (\r\n        <div>\r\n            <Title title='All Items' />\r\n            \r\n            <ItemList items={allItems} setAllItems={setAllItems} user={user}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ItemList = ({items, setAllItems, user}) => {\r\n\r\n    const [message, setMessage] = useState(null)\r\n    const currentUser = user; \r\n    itemService.setToken(currentUser.token)\r\n\r\n    const handleDelete = (id, eachUser) => {\r\n        \r\n        if ((eachUser !== currentUser.username) && (currentUser.username!=='admin')){\r\n            setMessage({type: 'error-notification items-page-notification', msg: 'Only the owner can delete an item'})\r\n            setTimeout(()=>setMessage(null), 2000); \r\n            return; \r\n        }\r\n        \r\n        if (window.confirm(`Are you sure you want to delete the item with ID ${id}?`)) {\r\n            itemService.deleteItem(id).then(data => {\r\n                setAllItems(items.filter(item => item.id !== id))\r\n                setMessage({type: 'success-notification items-page-notification', msg: 'The item was deleted'})\r\n                setTimeout(()=>setMessage(null), 2000); \r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            <Notification message={message} /> \r\n            <table className='items-table'> \r\n                \r\n                <tbody>\r\n                    <tr>\r\n                        <th className='table-id'>ID</th>\r\n                        <th>Item</th>\r\n                        <th>User</th>\r\n                        <th>Delete</th>\r\n                        <th>Details / Edit</th>\r\n                    </tr>\r\n                    {\r\n                        items.map( each => {\r\n                            return <tr key={each.id}>\r\n                                <td className='table-id'> {each.id} </td>\r\n                                <td> {each.content}  </td> \r\n                                <td> {each.user} </td>\r\n\r\n                                <td className='items-delete-column'> <FaTrashAlt className='item-icon' onClick={()=>handleDelete(each.id, each.user)}/> </td>\r\n\r\n                                <td className='items-edit-column'> <Link to={`/item/${each.id}`}><FaEdit className='item-icon'/> </Link> </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Title from './helperComponents/Title';\r\nimport '../sass/Item.scss'\r\nimport itemService from '../services/items';\r\nimport Notification from './helperComponents/Notification';\r\n\r\n\r\nfunction Item({user}) {\r\n    const id = useParams().id; \r\n    const [loadedItem, setLoadedItem] = useState({\r\n        content: '', id: '', private: '', user: ''\r\n    }); \r\n    const [text, setText] = useState(''); \r\n    const [admin, setAdmin] = useState('public')\r\n    const [message, setMessage] = useState(null)\r\n    const [ backButton, setBackButton ] = useState('Back'); \r\n\r\n    const currentUser = user.username; \r\n    itemService.setToken(user.token)\r\n\r\n    const changeText = (e) => {\r\n        setText(e.target.value)\r\n        setBackButton('Discard Changes')\r\n    }\r\n\r\n    const changeUserRights = e => {\r\n        setAdmin(e.target.value)\r\n    }\r\n\r\n    useEffect ( ()=>{\r\n        itemService.getItem(id).then(data =>{\r\n            setLoadedItem(data);\r\n            setText(data.content)\r\n            setAdmin(data.private)\r\n        })\r\n    }, [id])\r\n\r\n    const history = useHistory(); \r\n\r\n    const save = () => {\r\n        if (text.length < 5) {\r\n            setMessage({type: 'error-notification', msg: 'The item should have 5 characters or more'})\r\n            setTimeout(()=>setMessage(null), 2000); \r\n        } else {\r\n            const editedItem = {\r\n                ...loadedItem, content: text, private: admin\r\n            }\r\n            itemService.updateItem(editedItem).then(data => {\r\n                setMessage({type: 'success-notification', msg: 'Item successfully updated'})\r\n                setTimeout(()=> {\r\n                    setMessage(null)\r\n                    history.push('/crudReactFrontend')\r\n                }, 2000)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title='Edit Item'/>\r\n\r\n            <div className='edit-box'>\r\n\r\n                <div className='edit-id'>\r\n                    <div>Item Id <input type='text' defaultValue={loadedItem.id} readOnly></input></div>\r\n                    <div>User <input type='text' defaultValue={loadedItem.user} readOnly></input></div>\r\n                </div>\r\n\r\n                <div className='editable-fields'>\r\n\r\n                    <div className='item-content'>\r\n                        <p>Item content</p>\r\n                        <textarea rows='8' placeholder='Item text' value={text} onChange={changeText}></textarea>\r\n                    </div>\r\n\r\n                    {\r\n                        (currentUser === loadedItem.user) ? \r\n                        <div className='user-rights'>\r\n                            User rights\r\n                            <select value={admin} onChange={changeUserRights}>\r\n                                <option value='public'>Public</option>\r\n                                <option value='private'>Private</option>\r\n                            </select>\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n\r\n                <Notification message={message} />\r\n                \r\n            </div>\r\n            <div className='edit-buttons'>\r\n                <Link to={'/'}><button className='login-clear'>{backButton}</button></Link>\r\n                <button className='login-button' onClick={save}>Save</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item","import React, {useState} from 'react'\r\nimport Title from './helperComponents/Title'\r\nimport '../sass/NewItem.scss'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport itemService from '../services/items'\r\nimport Notification from './helperComponents/Notification'\r\n\r\nfunction NewItem({user}) {\r\n    const [text, setText] = useState('')\r\n    const [rights, setRights] = useState('public')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    let currUser = user; \r\n    const history = useHistory()\r\n\r\n    const changeText = e => {\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const changeRights = e => {\r\n        setRights(e.target.value)\r\n    }\r\n\r\n    const create = () => {\r\n        if (text.length < 5) {\r\n            setMessage({type: 'error-notification', msg: 'The item should have 5 characters or more'})\r\n            setTimeout(()=>setMessage(null), 2000); \r\n            return;\r\n        }\r\n\r\n        itemService.setToken(currUser.token)\r\n        itemService.createItem({text, rights, user: currUser['username'] }).then(data => { \r\n            setMessage({type: 'success-notification', msg: 'Item successfully created'})\r\n            setTimeout(()=>{\r\n                //history.push('/')\r\n                setMessage(null)\r\n                history.push('/crudReactFrontend')\r\n            }, 2000); \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title='Add a new item' />\r\n            <div className='new-item-box'>\r\n                <div className='editable-fields'>\r\n                    \r\n                    <div className='item-content'>\r\n                        <p>Item content</p>\r\n                        <textarea rows='8' placeholder='Item text' value={text} onChange={changeText}></textarea>\r\n                    </div>\r\n\r\n                    <div className='user-rights'>\r\n                        User rights\r\n                        <select value={rights} onChange={changeRights}>\r\n                            <option value='public'>Public</option>\r\n                            <option value='private'>Private</option>\r\n                        </select>\r\n                    </div>\r\n                    <Notification message={message}/> \r\n                </div>\r\n                <div className='edit-buttons'>\r\n                    <Link to={'/'}><button className='login-clear'>Cancel</button></Link>\r\n                    <button className='login-button' onClick={create}>Create New</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewItem\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Link, useHistory} from 'react-router-dom'\r\nimport Config from './Config'\r\nimport Items from './Items'\r\nimport Item from './Item'\r\nimport {FaUsersCog, FaHome} from 'react-icons/fa'\r\n\r\nimport '../sass/Main.scss'\r\nimport NewItem from './NewItem'\r\n\r\nfunction Main({user}) {\r\n\t\r\n\tconst hist = useHistory();\r\n\r\n    const logout = () =>{\r\n        window.localStorage.removeItem('loggedUserP1')\r\n\t\thist.push('/crudReactFrontend'); \r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div className='main-page'>\r\n            <Router>\r\n                <div className='main-navbar'>\r\n                    <div className='main-menu'>\r\n\r\n                            <Link to={'/crudReactFrontend'} style={{textDecoration:'none', color: 'black'}} className='main-menu-home'>\r\n                                <FaHome size={50} className='menu-home'/>\r\n                            </Link>\r\n\r\n                            <span style={{fontSize:'42px'}}>|</span>\r\n\r\n                            <div className='main-menu-test'>\r\n                                <Link to={'/crudReactFrontend/new'} style={{ textDecoration: 'none'}}>\r\n                                    New item\r\n                                </Link>\r\n                            </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className='main-menu-logout'>\r\n                        <Link className='main-menu-cog' to={'/crudReactFrontend/config'} style={{textDecoration:'none', textDecorationColor:'none'}}> <FaUsersCog size={42}/> </Link>\r\n                        <div onClick={logout} className='main-menu-card'>\r\n                            Logout\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Switch>\r\n                    <Route path={'/crudReactFrontend/item/:id'}><Item user={user}/></Route>\r\n                    <Route path={'/crudReactFrontend/config'}><Config user={user}/></Route>\r\n                    <Route path={'/crudReactFrontend/new'}><NewItem user={user}/></Route>\r\n                    <Route path={'/crudReactFrontend'}><Items user={user}/></Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n            <footer> <p>User: {user.name}</p></footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nimport Login from './components/Login'\r\nimport Main from './components/Main';\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        const loggedUserJSON = window.localStorage.getItem('loggedUserP1')\r\n        if (loggedUserJSON){\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            // noteService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (user===null) ? <Login setUser={setUser}/> \r\n                : <Main user={user}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\n\r\nReactDOM.render(\r\n    <App/>, document.getElementById('root')\r\n)"],"sourceRoot":""}